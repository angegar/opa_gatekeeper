apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: azure-kvname-sync
spec:
  provider: azure
  secretObjects:  
    - secretName: key1-sync
      type: Opaque
      data:
      - key: toto
        objectName: key1
    - secretName: key1-sync-generic
      type: generic
      data:
      - key: toto
        objectName: key1
  parameters:
    # usePodIdentity: "false"               # [OPTIONAL] if not provided, will default to "false"
    # useVMManagedIdentity: "false"         # [OPTIONAL available for version > 0.0.4] if not provided, will default to "false"
    # userAssignedIdentityID: "client_id"   # [OPTIONAL available for version > 0.0.4] use the client id to specify which user assigned managed identity to use. If using a user assigned identity as the VM's managed identity, then specify the identity's client id. If empty, then defaults to use the system assigned identity on the VM
    keyvaultName: "aks-secret-store"                # the name of the KeyVault
    cloudName: "AzurePublicCloud"                         # [OPTIONAL available for version > 0.0.4] if not provided, azure environment will default to AzurePublicCloud
    cloudEnvFileName: ""                  # [OPTIONAL available for version > 0.0.7] use to define path to file for populating azure environment
    objects:  |
      array:
        - |
          objectName: key1
          objectAlias: ""                 # If provided then it has to be referenced in [secretObjects].[objectName] to sync with Kubernetes secrets 
          objectType: secret
          objectVersion: ""
    tenantId: ""                       # the tenant ID of the KeyVault

---

# # system:serviceaccount:kube-system:secrets-store-csi-driver
# apiVersion: rbac.authorization.k8s.io/v1
# # This role binding allows "dave" to read secrets in the "development" namespace.
# # You need to already have a ClusterRole named "secret-reader".
# kind: RoleBinding
# metadata:
#   name: read-secrets
#   namespace: kube-system

#   #
#   # The namespace of the RoleBinding determines where the permissions are granted.
#   # This only grants permissions within the "development" namespace.
#   # namespace: development
# subjects:
# - kind: User
#   name: secrets-store-csi-driver # Name is case sensitive
#   apiGroup: rbac.authorization.k8s.io
# roleRef:
#   kind: ClusterRole
#   name: secret-reader
#   apiGroup: rbac.authorization.k8s.io